# Default values for osm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

osm:

  #
  # -- OSM control plane image parameters
  image:
    # -- Container image registry for control plane images
    registry: openservicemesh
    # -- Container image pull policy for control plane containers
    pullPolicy: IfNotPresent
    # -- Container image tag for control plane images
    tag: ""
    # -- Image name defaults
    name:
      # -- osm-controller's image name
      osmController: osm-controller
      # -- osm-injector's image name
      osmInjector: osm-injector
      # -- Sidecar init container's image name
      osmSidecarInit: init
      # -- osm-boostrap's image name
      osmBootstrap: osm-bootstrap
      # -- osm-crds' image name
      osmCRDs: osm-crds
      # -- osm-preinstall's image name
      osmPreinstall: osm-preinstall
      # -- osm-healthcheck's image name
      osmHealthcheck: osm-healthcheck
    # -- Image digest (defaults to latest compatible tag)
    digest:
      # -- osm-controller's image digest
      osmController: "sha256:cd990e6a9dc43236b9c20ff1b7b451aa5e0901e09fa9ee19b38291b81c9c0186"
      # -- osm-injector's image digest
      osmInjector: "sha256:d6ac4f1f1da81c595ebf86cc879fd5e77f1e56580d83663b0d91674cd2fc7d73"
      # -- Sidecar init container's image digest
      osmSidecarInit: "sha256:84e89596d7abbf84799b60980ff494767ef80c4a6500b9dac61c8057a53f2a20"
      # -- osm-crds' image digest
      osmCRDs: "sha256:76cc48c844717a2e924702c610e83c85c3a5997b27e192dcf175ecd5351c690e"
      # -- osm-boostrap's image digest
      osmBootstrap: "sha256:0631c1f69e2e1e5ae8796cfea8a63791a861d6d4ce514af2c45337f47f08070c"
      # -- osm-preinstall's image digest
      osmPreinstall: "sha256:921e0d51372db1582ece8fbbfc4790e802c4248c1cf3fd6836c3176b04cc95ed"
      # -- osm-healthcheck's image digest
      osmHealthcheck: "sha256:4dd1a529d612ffc46bfbbdaf04c51c8aec9bbb082a35ed2656e1dba348078c26"


  # -- `osm-controller` image pull secret
  imagePullSecrets: []
  # -- Envoy sidecar image for Linux workloads
  sidecarImage: envoyproxy/envoy-alpine:v1.19.3@sha256:874e699857e023d9234b10ffc5af39ccfc9011feab89638e56ac4042ecd4b0f3
  # -- Envoy sidecar image for Windows workloads
  sidecarWindowsImage: envoyproxy/envoy-windows:v1.19.3@sha256:f990f024e7e95f07b6c0d416684734607761e382c35d1ba9414c7e3fbf23969c
  # -- Curl image for control plane init container
  curlImage: curlimages/curl

  #
  # -- OSM controller parameters
  osmController:
    # -- OSM controller's replica count (ignored when autoscale.enable is true)
    replicaCount: 1
    # -- OSM controller's container resource parameters. See https://docs.openservicemesh.io/docs/guides/ha_scale/scale/ for more details.
    resource:
      limits:
        cpu: "1.5"
        memory: "1G"
      requests:
        cpu: "0.5"
        memory: "128M"
    # -- OSM controller's pod labels
    podLabels: {}
    # -- Enable Pod Disruption Budget
    enablePodDisruptionBudget: false
    # -- Auto scale configuration
    autoScale:
      # -- Enable Autoscale
      enable: false
      # -- Minimum replicas for autoscale
      minReplicas: 1
      # -- Maximum replicas for autoscale
      maxReplicas: 5
      cpu:
        # -- Average target CPU utilization (%)
        targetAverageUtilization: 80
      memory:
        # -- Average target memory utilization (%)
        targetAverageUtilization: 80

  #
  # -- Prometheus parameters
  prometheus:
    # -- Prometheus's container resource parameters
    resources:
      limits:
        cpu: "1"
        memory: "2G"
      requests:
        cpu: "0.5"
        memory: "512M"
    # -- Prometheus service's port
    port: 7070
    # -- Prometheus data rentention configuration
    retention:
      # -- Prometheus data retention time
      time: 15d
    # -- Image used for Prometheus
    image: prom/prometheus:v2.18.1

  certificateProvider:
    # -- The Certificate manager type: `tresor`, `vault` or `cert-manager`
    kind: tresor
    # -- Service certificate validity duration for certificate issued to workloads to communicate over mTLS
    serviceCertValidityDuration: 24h
    # -- Certificate key bit size for data plane certificates issued to workloads to communicate over mTLS
    certKeyBitSize: 2048

  #
  # -- Hashicorp Vault configuration
  vault:
    # --  Hashicorp Vault host/service - where Vault is installed
    host: ""
    # -- protocol to use to connect to Vault
    protocol: http
    # -- token that should be used to connect to Vault
    token: ""
    # -- Vault role to be used by Open Service Mesh
    role: openservicemesh

  #
  # -- cert-manager.io configuration
  certmanager:
    # --  cert-manager issuer namecert-manager issuer name
    issuerName: osm-ca
    # -- cert-manager issuer kind
    issuerKind: Issuer
    # -- cert-manager issuer group
    issuerGroup: cert-manager.io

  # -- The Kubernetes secret name to store CA bundle for the root CA used in OSM
  caBundleSecretName: osm-ca-bundle

  #
  # -- Grafana parameters
  grafana:
    # -- Grafana service's port
    port: 3000
    # -- Enable Remote Rendering in Grafana
    enableRemoteRendering: false
    # -- Image used for Grafana
    image: grafana/grafana:8.2.2
    # -- Image used for Grafana Renderer
    rendererImage: grafana/grafana-image-renderer:3.2.1

  # -- Enable the debug HTTP server on OSM controller
  enableDebugServer: false

  # -- Enable permissive traffic policy mode
  enablePermissiveTrafficPolicy: false

  # -- Enable egress in the mesh
  enableEgress: false

  # -- Enable reconciler for OSM's CRDs and mutating webhook
  enableReconciler: false

  # -- Deploy Prometheus with OSM installation
  deployPrometheus: false

  # -- Deploy Grafana with OSM installation
  deployGrafana: false

  # -- Enable Fluent Bit sidecar deployment on OSM controller's pod
  enableFluentbit: false

  #
  # -- FluentBit parameters
  fluentBit:
    # -- Fluent Bit sidecar container name
    name: fluentbit-logger
    # -- Registry for Fluent Bit sidecar container
    registry: fluent
    # -- Fluent Bit sidecar image tag
    tag: 1.6.4
    # -- PullPolicy for Fluent Bit sidecar container
    pullPolicy: IfNotPresent
    # -- Fluent Bit output plugin
    outputPlugin: stdout
    # -- WorkspaceId for Fluent Bit output plugin to Log Analytics
    workspaceId: ""
    # -- Primary Key for Fluent Bit output plugin to Log Analytics
    primaryKey: ""
    # -- Enable proxy support toggle for Fluent Bit
    enableProxySupport: false
    # -- Optional HTTP proxy endpoint for Fluent Bit
    httpProxy: ""
    # -- Optional HTTPS proxy endpoint for Fluent Bit
    httpsProxy: ""

  # -- Identifier for the instance of a service mesh within a cluster
  meshName: osm

  # -- Log level for the Envoy proxy sidecar. Non developers should generally never set this value. In production environments the LogLevel should be set to `error`
  envoyLogLevel: error

  # -- Proxy mode for the Envoy proxy sidecar. Acceptable values are ['Localhost', 'PodIP']
  localProxyMode: Localhost

  # -- Sets the max data plane connections allowed for an instance of osm-controller, set to 0 to not enforce limits
  maxDataPlaneConnections: 0

   # -- Sets the resync interval for regular proxy broadcast updates, set to 0s to not enforce any resync
  configResyncInterval: "0s"

  # -- Controller log verbosity
  controllerLogLevel: info

  # -- Enforce only deploying one mesh in the cluster
  enforceSingleMesh: true

  # -- Prefix used in name of the webhook configuration resources
  webhookConfigNamePrefix: osm-webhook

  # -- Namespace to deploy OSM in. If not specified, the Helm release namespace is used.
  osmNamespace: ""

  # -- Deploy Jaeger during OSM installation
  deployJaeger: false

  #
  # -- Tracing parameters
  #
  # The following section configures a destination collector where tracing
  # data is sent to. Current implementation supports only Zipkin format
  # backends (https://github.com/openservicemesh/osm/issues/1596)
  tracing:
    # -- Toggles Envoy's tracing functionality on/off for all sidecar proxies in the mesh
    enable: false
    # -- Address of the tracing collector service (must contain the namespace). When left empty, this is computed in helper template to "jaeger.<osm-namespace>.svc.cluster.local". Please override for BYO-tracing as documented in tracing.md
    address: ""
    # -- Port of the tracing collector service
    port: 9411
    # -- Tracing collector's API path where the spans will be sent to
    endpoint: "/api/v2/spans"
    # -- Image used for tracing
    image: jaegertracing/all-in-one

  # -- Specifies a global list of IP ranges to exclude from outbound traffic interception by the sidecar proxy.
  # If specified, must be a list of IP ranges of the form a.b.c.d/x.
  outboundIPRangeExclusionList: []

  # -- Specifies a global list of IP ranges to include for outbound traffic interception by the sidecar proxy.
  # If specified, must be a list of IP ranges of the form a.b.c.d/x.
  outboundIPRangeInclusionList: []

  # -- Specifies a global list of ports to exclude from outbound traffic interception by the sidecar proxy.
  # If specified, must be a list of positive integers.
  outboundPortExclusionList: []

  # -- Specifies a global list of ports to exclude from inbound traffic interception by the sidecar proxy.
  # If specified, must be a list of positive integers.
  inboundPortExclusionList: []

  # -- Specifies a global list of network interface names to exclude for inbound and outbound traffic interception by the sidecar proxy.
  networkInterfaceExclusionList: []

  #
  # -- OSM's sidecar injector parameters
  injector:
    # -- Sidecar injector's replica count (ignored when autoscale.enable is true)
    replicaCount: 1
    # -- Sidecar injector's container resource parameters
    resource:
      limits:
        cpu: "0.5"
        memory: "64M"
      requests:
        cpu: "0.3"
        memory: "64M"
    # -- Sidecar injector's pod labels
    podLabels: {}
    # -- Enable Pod Disruption Budget
    enablePodDisruptionBudget: false
    # -- Auto scale configuration
    autoScale:
      # -- Enable Autoscale
      enable: false
      # -- Minimum replicas for autoscale
      minReplicas: 1
      # -- Maximum replicas for autoscale
      maxReplicas: 5
      cpu:
        # -- Average target CPU utilization (%)
        targetAverageUtilization: 80
      memory:
      # -- Average target memory utilization (%)
        targetAverageUtilization: 80
    # -- Mutating webhook timeout
    webhookTimeoutSeconds: 20

  # -- Run init container in privileged mode
  enablePrivilegedInitContainer: false

  #
  # -- Feature flags for experimental features
  featureFlags:
    # -- Enable extra Envoy statistics generated by a custom WASM extension
    enableWASMStats: true
    # -- Enable OSM's Egress policy API.
    # When enabled, fine grained control over Egress (external) traffic is enforced
    enableEgressPolicy: true
    # -- Enable Multicluster mode.
    # When enabled, multicluster mode will be enabled in OSM
    enableMulticlusterMode: false
    # -- Enable async proxy-service mapping
    enableAsyncProxyServiceMapping: false
    # -- Enables OSM's IngressBackend policy API.
    # When enabled, OSM will use the IngressBackend API allow ingress traffic to mesh backends
    enableIngressBackendPolicy: true
    # -- Enable Envoy active health checks
    enableEnvoyActiveHealthChecks: false
    # -- Enables SnapshotCache feature for Envoy xDS server.
    enableSnapshotCacheMode: false
    # -- Enable Retry Policy for automatic request retries
    enableRetryPolicy: false

  # -- OSM multicluster feature configuration
  multicluster:
    # -- Log level for the multicluster gateway
    gatewayLogLevel: error

  # -- Node tolerations applied to control plane pods.
  # The specified tolerations allow pods to schedule onto nodes with matching taints.
  controlPlaneTolerations: []

  #
  # -- OSM bootstrap parameters
  osmBootstrap:
    # -- OSM bootstrap's replica count
    replicaCount: 1
    # -- OSM bootstrap's container resource parameters
    resource:
      limits:
        cpu: "0.5"
        memory: "128M"
      requests:
        cpu: "0.3"
        memory: "128M"
    # -- OSM bootstrap's pod labels
    podLabels: {}

  #
  # -- OSM resource validator webhook configuration
  validatorWebhook:
    # -- Name of the ValidatingWebhookConfiguration
    webhookConfigurationName: ""

#
# -- Contour configuration
contour:
  # -- Enables deployment of Contour control plane and gateway
  enabled: false
  # -- Contour controller configuration
  contour:
    image:
      registry: docker.io
      repository: projectcontour/contour
      tag: v1.18.0
  # -- Contour envoy edge proxy configuration
  envoy:
    image:
      registry: docker.io
      repository: envoyproxy/envoy-alpine
      tag: v1.19.3

#
# -- SMI configuration
smi:
  # -- Enables validation of SMI Traffic Target
  validateTrafficTarget: true
