apiVersion: apps/v1
kind: Deployment
metadata:
  name: osm-bootstrap
  namespace: {{ include "osm.namespace" . }}
  labels:
    {{- include "osm.labels" . | nindent 4 }}
    app: osm-bootstrap
    meshName: {{ .Values.OpenServiceMesh.meshName }}
spec:
  replicas: {{ .Values.OpenServiceMesh.osmBootstrap.replicaCount }}
  selector:
    matchLabels:
      app: osm-bootstrap
  template:
    metadata:
      labels:
        {{- include "osm.labels" . | nindent 8 }}
        app: osm-bootstrap
  {{- if .Values.OpenServiceMesh.osmBootstrap.podLabels }}
  {{- toYaml .Values.OpenServiceMesh.osmBootstrap.podLabels | nindent 8 }}
  {{- end }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9091'
    spec:
      serviceAccountName: {{ .Release.Name }}
      {{- if and (not (.Capabilities.APIVersions.Has "security.openshift.io/v1")) .Values.OpenServiceMesh.pspEnabled }}
      {{- include "restricted.securityContext" . | nindent 6 }}
      {{- end }}
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      initContainers:
        - name: init-osm-bootstrap
          image: "{{ include "osmCRDs.image" . }}"
          imagePullPolicy: {{ .Values.OpenServiceMesh.image.pullPolicy }}
          args:
          - apply
          - -f
          - /osm-crds
      containers:
        - name: osm-bootstrap
          image: "{{ include "osmBootstrap.image" . }}"
          imagePullPolicy: {{ .Values.OpenServiceMesh.image.pullPolicy }}
          ports:
            - name: "tls"
              containerPort: 443
            - name: "metrics"
              containerPort: 9091
            - name: "health"
              containerPort: 9095
          command: ['/osm-bootstrap']
          args: [
            "--verbosity", "{{.Values.OpenServiceMesh.controllerLogLevel}}",
            "--osm-namespace", "{{ include "osm.namespace" . }}",
            "--ca-bundle-secret-name", "{{.Values.OpenServiceMesh.caBundleSecretName}}",
            "--certificate-manager", "{{.Values.OpenServiceMesh.certificateProvider.kind}}",
            {{ if eq .Values.OpenServiceMesh.certificateProvider.kind "vault" }}
            "--vault-host", "{{.Values.OpenServiceMesh.vault.host}}",
            "--vault-protocol", "{{.Values.OpenServiceMesh.vault.protocol}}",
            "--vault-token", "{{.Values.OpenServiceMesh.vault.token}}",
            {{- end }}
            "--cert-manager-issuer-name", "{{.Values.OpenServiceMesh.certmanager.issuerName}}",
            "--cert-manager-issuer-kind", "{{.Values.OpenServiceMesh.certmanager.issuerKind}}",
            "--cert-manager-issuer-group", "{{.Values.OpenServiceMesh.certmanager.issuerGroup}}",
            "--enable-reconciler", "{{.Values.OpenServiceMesh.enableReconciler}}",
          ]
          resources:
            limits:
              cpu: "{{.Values.OpenServiceMesh.osmBootstrap.resource.limits.cpu}}"
              memory: "{{.Values.OpenServiceMesh.osmBootstrap.resource.limits.memory}}"
            requests:
              cpu: "{{.Values.OpenServiceMesh.osmBootstrap.resource.requests.cpu}}"
              memory: "{{.Values.OpenServiceMesh.osmBootstrap.resource.requests.memory}}"
          readinessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 5
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 9095
          livenessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 5
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 9095
          env:
            # The BOOTSTRAP_POD_NAME env variable sets pod name dynamically, used by osm-bootstrap to register events
            - name: BOOTSTRAP_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
    {{- if .Values.OpenServiceMesh.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.OpenServiceMesh.imagePullSecrets | indent 8 }}
    {{- end }}
    {{- if .Values.OpenServiceMesh.controlPlaneTolerations }}
      tolerations:
{{ toYaml .Values.OpenServiceMesh.controlPlaneTolerations | indent 8 }}
    {{- end }}
