{{- if .Values.OpenServiceMesh.deployPrometheus }}
{{- if and (not (.Capabilities.APIVersions.Has "security.openshift.io/v1")) .Values.OpenServiceMesh.pspEnabled }}
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ .Release.Name }}-prometheus-psp
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  # Required to prevent escalations to root.
  allowPrivilegeEscalation: false
  # This is redundant with non-root + disallow privilege escalation,
  # but we can provide it for defense in depth.
  requiredDropCapabilities:
    - ALL
  # Allow core volume types.
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    # Assume that persistentVolumes set up by the cluster admin are safe to use.
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    # Require the container to run without root privileges.
    rule: 'MustRunAsNonRoot'
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{.Release.Name}}-prometheus
  labels:
    {{- include "osm.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["nodes", "nodes/proxy",  "nodes/metrics", "services", "endpoints", "pods", "ingresses", "configmaps"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions"]
    resources: ["ingresses", "ingresses/status"]
    verbs: ["list", "get", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
  {{- if .Values.OpenServiceMesh.pspEnabled }}
  - apiGroups: ["extensions"]
    resourceNames: ["{{ .Release.Name }}-prometheus-psp"]
    resources: ["podsecuritypolicies"]
    verbs: ["use"]
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{.Release.Name}}-prometheus
  labels:
    {{- include "osm.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: osm-prometheus
    namespace: {{ include "osm.namespace" . }}
roleRef:
  kind: ClusterRole
  name: {{.Release.Name}}-prometheus
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: osm-prometheus
  namespace: {{ include "osm.namespace" . }}
  labels:
    {{- include "osm.labels" . | nindent 4 }}
{{- end }}