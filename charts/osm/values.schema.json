{
    "$schema": "http://json-schema.org/draft-07/schema",
    "type": "object",
    "title": "The OSM Helm chart values schema",
    "required": [
        "OpenServiceMesh"
    ],
    "properties": {
        "OpenServiceMesh": {
            "$id": "#/properties/OpenServiceMesh",
            "type": "object",
            "title": "The OpenServiceMesh schema",
            "description": "The top level required key in the values file.",
            "required": [
                "replicaCount",
                "image",
                "sidecarImage",
                "certificateManager",
                "serviceCertValidityDuration",
                "caBundleSecretName",
                "enableDebugServer",
                "enablePermissiveTrafficPolicy",
                "enableBackpressureExperimental",
                "enableEgress",
                "deployPrometheus",
                "enablePrometheusScraping",
                "deployGrafana",
                "enableFluentbit",
                "fluentBit",
                "meshName",
                "useHTTPSIngress",
                "envoyLogLevel",
                "enforceSingleMesh",
                "deployJaeger",
                "tracing", 
                "webhookConfigNamePrefix", 
                "connectVault"
            ],
            "properties": {
                "replicaCount": {
                    "$id": "#/properties/OpenServiceMesh/properties/replicaCount",
                    "type": "integer",
                    "title": "The replicaCount schema",
                    "description": "The number of replicas of the osm-controller Pod.",
                    "examples": [
                        1
                    ]
                },
                "image": {
                    "$id": "#/properties/OpenServiceMesh/properties/image",
                    "type": "object",
                    "title": "The image schema",
                    "description": "The details of the images to run.",
                    "examples": [
                        {
                            "registry": "openservicemesh",
                            "pullPolicy": "IfNotPresent",
                            "tag": "v0.4.2"
                        }
                    ],
                    "required": [
                        "registry",
                        "pullPolicy",
                        "tag"
                    ],
                    "properties": {
                        "registry": {
                            "$id": "#/properties/OpenServiceMesh/properties/image/properties/registry",
                            "type": "string",
                            "title": "The registry schema",
                            "description": "The registry of the images to run.",
                            "examples": [
                                "openservicemesh"
                            ]
                        },
                        "pullPolicy": {
                            "$id": "#/properties/OpenServiceMesh/properties/image/properties/pullPolicy",
                            "type": "string",
                            "title": "The pullPolicy schema",
                            "description": "The image pull policy.",
                            "pattern": "^(Always|Never|IfNotPresent)?$",
                            "examples": [
                                "IfNotPresent"
                            ]
                        },
                        "tag": {
                            "$id": "#/properties/OpenServiceMesh/properties/image/properties/tag",
                            "type": "string",
                            "title": "The tag schema",
                            "description": "The image tag to run.",
                            "examples": [
                                "v0.4.2"
                            ]
                        }
                    },
                    "additionalProperties": true
                },
                "sidecarImage": {
                    "$id": "#/properties/OpenServiceMesh/properties/sidecarImage",
                    "type": "string",
                    "title": "The sidecarImage schema",
                    "description": "The proxy side car image to run.",
                    "examples": [
                        "envoyproxy/envoy-alpine:v1.15.0"
                    ]
                },
                "certificateManager": {
                    "$id": "#/properties/OpenServiceMesh/properties/certificateManager",
                    "type": "string",
                    "title": "The certificateManager schema",
                    "description": "The certificate manager osm-controller should use.",
                    "pattern": "^(tresor|vault|cert-manager)$",
                    "examples": [
                        "tresor"
                    ]
                },
                "serviceCertValidityDuration": {
                    "$id": "#/properties/OpenServiceMesh/properties/serviceCertValidityDuration",
                    "type": "string",
                    "title": "The serviceCertValidityDuration schema",
                    "description": "The service certificate validity duration.",
                    "examples": [
                        "24h"
                    ]
                },
                "caBundleSecretName": {
                    "$id": "#/properties/OpenServiceMesh/properties/caBundleSecretName",
                    "type": "string",
                    "title": "The caBundleSecretName schema",
                    "description": "An explanation about the purpose of this instance.",
                    "examples": [
                        "osm-ca-bundle"
                    ]
                },
                "enableDebugServer": {
                    "$id": "#/properties/OpenServiceMesh/properties/enableDebugServer",
                    "type": "boolean",
                    "title": "The enableDebugServer schema",
                    "description": "Indicates whether the Debug Server should be enabled or not.",
                    "examples": [
                        false
                    ]
                },
                "enablePermissiveTrafficPolicy": {
                    "$id": "#/properties/OpenServiceMesh/properties/enablePermissiveTrafficPolicy",
                    "type": "boolean",
                    "title": "The enablePermissiveTrafficPolicy schema",
                    "description": "Indicates whether permissive traffic policy should be enabled or not.",
                    "examples": [
                        false
                    ]
                },
                "enableBackpressureExperimental": {
                    "$id": "#/properties/OpenServiceMesh/properties/enableBackpressureExperimental",
                    "type": "boolean",
                    "title": "The enableBackpressureExperimental schema",
                    "description": "Indicates whether the experimental backpressure policy should be enabled or not.",
                    "examples": [
                        false
                    ]
                },
                "enableEgress": {
                    "$id": "#/properties/OpenServiceMesh/properties/enableEgress",
                    "type": "boolean",
                    "title": "The enableEgress schema",
                    "description": "Indicates whether egress should be enabled or not.",
                    "examples": [
                        false
                    ]
                },
                "deployPrometheus": {
                    "$id": "#/properties/OpenServiceMesh/properties/deployPrometheus",
                    "type": "boolean",
                    "title": "The deployPrometheus schema",
                    "description": "Indicates whether Prometheus should be installed and configured as part of the osm control plane.",
                    "examples": [
                        false
                    ]
                },
                "enablePrometheusScraping": {
                    "$id": "#/properties/OpenServiceMesh/properties/enablePrometheusScraping",
                    "type": "boolean",
                    "title": "The enablePrometheusScraping schema",
                    "description": "Indicates whether Prometheus scraping should be enabled.",
                    "examples": [
                        true
                    ]
                },
                "deployGrafana": {
                    "$id": "#/properties/OpenServiceMesh/properties/deployGrafana",
                    "type": "boolean",
                    "title": "The deployGrafana schema",
                    "description": "Indicates whether Grafana should be installed and configured as part of the osm control plane.",
                    "examples": [
                        false
                    ]
                },
                "enableFluentbit": {
                    "$id": "#/properties/OpenServiceMesh/properties/enableFluentbit",
                    "type": "boolean",
                    "title": "The enableFluentbit schema",
                    "description": "Indicates whether Fluent Bit log forwarding should be enabled",
                    "examples": [
                        false
                    ]
                },
                "fluentBit": {
                    "$id": "#/properties/OpenServiceMesh/properties/fluentBit",
                    "type": "object",
                    "title": "The Fluent Bit schema",
                    "description": "The default details of the Fluent Bit sidecar if enabled.",
                    "examples": [
                        {
                            "name": "fluentbit-logger",
                            "registry": "fluent",
                            "tag": "1.6.4",
                            "pullPolicy": "IfNotPresent",
                            "logLevel": "error",
                            "outputPlugin": "stdout",
                            "enableProxySupport": "false",
                            "httpProxy": "",
                            "httpsProxy": ""
                        }
                    ],
                    "required": [
                        "name",
                        "registry",
                        "tag",
                        "pullPolicy",
                        "logLevel",
                        "outputPlugin",
                        "enableProxySupport",
                        "httpProxy",
                        "httpsProxy"
                    ],
                    "properties": {
                        "name": {
                            "$id": "#/properties/OpenServiceMesh/properties/fluentBit/properties/name",
                            "type": "string",
                            "title": "The name schema",
                            "description": "The name of the Fluent Bit container",
                            "examples": [
                                "fluentbit-logger"
                            ]
                        },
                        "registry": {
                            "$id": "#/properties/OpenServiceMesh/properties/fluentBit/properties/registry",
                            "type": "string",
                            "title": "The registry schema",
                            "description": "The registry of the image to run.",
                            "examples": [
                                "fluent"
                            ]
                        },
                        "tag": {
                            "$id": "#/properties/OpenServiceMesh/properties/fluentBit/properties/tag",
                            "type": "string",
                            "title": "The tag schema",
                            "description": "The image tag to run.",
                            "examples": [
                                "1.6.4"
                            ]
                        },
                        "pullPolicy": {
                            "$id": "#/properties/OpenServiceMesh/properties/fluentBit/properties/pullPolicy",
                            "type": "string",
                            "title": "The pullPolicy schema",
                            "description": "The image pull policy.",
                            "pattern": "^(Always|Never|IfNotPresent)$",
                            "examples": [
                                "IfNotPresent"
                            ]
                        },
                        "logLevel": {
                            "$id": "#/properties/OpenServiceMesh/properties/fluentBit/properties/logLevel",
                            "type": "string",
                            "title": "The logLevel schema",
                            "description": "The Fluent Bit log level.",
                            "pattern": "^(debug|info|warn|error|fatal|panic|disabled|trace)$",
                            "examples": [
                                "error"
                            ]
                        },
                        "outputPlugin": {
                            "$id": "#/properties/OpenServiceMesh/properties/fluentBit/properties/outputPlugin",
                            "type": "string",
                            "title": "The output plugin for Fluent Bit",
                            "description": "The log forwarding destination plugin for Fluent Bit",
                            "examples": [
                                "stdout"
                            ]
                        },
                        "enableProxySupport": {
                            "$id": "#/properties/OpenServiceMesh/properties/fluentBit/properties/enableProxySupport",
                            "type": "boolean",
                            "title": "The enableProxySupport output schema",
                            "description": "Indicates whether outbound proxy support should be configured for Fluent Bit",
                            "examples": [
                                false
                            ]
                        },
                        "httpProxy": {
                            "$id": "#/properties/OpenServiceMesh/properties/fluentBit/properties/httpProxy",
                            "type": "string",
                            "title": "The httpProxy schema",
                            "description": "http proxy endpoint",
                            "examples": [
                                "http://<host>:<port>"
                            ]
                        },
                        "httpsProxy": {
                            "$id": "#/properties/OpenServiceMesh/properties/fluentBit/properties/httpsProxy",
                            "type": "string",
                            "title": "The httpsProxy schema",
                            "description": "https proxy endpoint",
                            "examples": [
                                "http://<host>:<port>"
                            ]
                        }
                    },
                    "additionalProperties": true
                },
                "meshName": {
                    "$id": "#/properties/OpenServiceMesh/properties/meshName",
                    "type": "string",
                    "title": "The meshName schema",
                    "description": "The name associated with the control plane being installed.",
                    "examples": [
                        "osm"
                    ]
                },
                "useHTTPSIngress": {
                    "$id": "#/properties/OpenServiceMesh/properties/useHTTPSIngress",
                    "type": "boolean",
                    "title": "The useHTTPSIngress schema",
                    "description": "Indicates whether HTTPS Ingress should be enabled or not.",
                    "examples": [
                        false
                    ]
                },
                "envoyLogLevel": {
                    "$id": "#/properties/OpenServiceMesh/properties/envoyLogLevel",
                    "type": "string",
                    "title": "The envoyLogLevel schema",
                    "description": "Envoy log level.",
                    "pattern": "^(trace|debug|info|warning|warn|error|critical|off)$",
                    "examples": [
                        "error"
                    ]
                },
                "enforceSingleMesh": {
                    "$id": "#/properties/OpenServiceMesh/properties/enforceSingleMesh",
                    "type": "boolean",
                    "title": "The enforceSingleMesh schema",
                    "description": "Enforce only running a single control plane within a cluster.",
                    "examples": [
                        false
                    ]
                },
                "deployJaeger": {
                    "$id": "#/properties/OpenServiceMesh/properties/deployJaeger",
                    "type": "boolean",
                    "title": "The deployJaeger schema",
                    "description": "Indicates whether Jaeger should be installed and configured as part of the control plane.",
                    "examples": [
                        true
                    ]
                },
                "tracing": {
                    "$id": "#/properties/OpenServiceMesh/properties/tracing",
                    "type": "object",
                    "title": "The tracing schema",
                    "description": "An explanation about the purpose of this instance.",
                    "examples": [
                        {
                            "enable": true
                        }
                    ],
                    "required": [
                        "enable"
                    ],
                    "properties": {
                        "enable": {
                            "$id": "#/properties/OpenServiceMesh/properties/tracing/properties/enable",
                            "type": "boolean",
                            "title": "The enable schema",
                            "description": "Indicates whether tracing is enabled or not.",
                            "examples": [
                                true
                            ]
                        }
                    },
                    "additionalProperties": true
                }, 
                "webhookConfigNamePrefix": {
                    "$id": "#/properties/OpenServiceMesh/properties/webhookConfigNamePrefix",
                    "type": "string",
                    "title": "Webhook Config Name Prefix",
                    "description": "Prefix for the webhook name, which uses the format <webhook-prefix>-<mesh-name>",
                    "examples": [
                        ""
                    ]
                },
                "connectVault": {
                    "$id": "#/properties/OpenServiceMesh/properties/connectVault",
                    "type": "boolean",
                    "title": "Connect to vault for cert manager",
                    "description": "Specifies whether OSM deployment needs vault connection for cert-manager support",
                    "examples": [
                        true
                    ]
                },
                "osmNamespace": {
                    "$id": "#/properties/OpenServiceMesh/properties/osmNamespace",
                    "type": "string",
                    "title": "The namespace of the OSM control plane components",
                    "description": "Indicates the namespace in which the OSM control plane components will be installed",
                    "examples": [
                        "osm-system"
                    ]
                }
            },
            "additionalProperties": true
        }
    },
    "additionalProperties": true
}