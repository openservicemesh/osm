#!/bin/bash

export OSM_ID=osm-local
export K8S_NAMESPACE=osm-system
export KUBECONFIG=~/.kube/config
export BOOKBUYER_NAMESPACE=bookbuyer-ns
export BOOKSTORE_NAMESPACE=bookstore-ns
export BOOKTHIEF_NAMESPACE=bookthief-ns
#PROMETHEUS_SVC is the name for all prometheus related services/deployments
export PROMETHEUS_SVC=prometheus
export AZURE_SUBSCRIPTION=abc
export CTR_REGISTRY=your.azurecr.io/osm
export CTR_REGISTRY_CREDS_NAME=acr-creds
export CTR_TAG=latest
export WAIT_SECONDS_FOR_200_OK=0  # 0 means wait forever for 200 OK

# Enable human readable logs
export OSM_HUMAN_DEBUG_LOG=true

# Enable logging of observed Kubernetes events (must have trace logging level enabled as well)
export OSM_LOG_KUBERNETES_EVENTS=true

# Token to be shared between components (and used by the temporary instance of Vault)
export VAULT_TOKEN=abcd

### The section below configures certificates management
### OSM has 2 ways to manage certificates
### Set CERT_MANAGER to "tresor" to use the internal system (relies on k8s secrets)
### Set CERT_MANAGER to "vault" to use Hashicorp Vault

# What certificate manager are using?
export CERT_MANAGER=tresor


### When CERT_MANAGER is set to "vault" the following also have to be set:

### Enable Hashicorp Vault integration
# export CERT_MANAGER=vault

### The Hashicorp Vault host/service - where Vault is installed
# export VAULT_HOST="vault.${K8S_NAMESPACE}.svc.cluster.local"

### The protocol to use to connect to Vault
# export VAULT_PROTOCOL=http

### The token that should be used to connect to Vault
# export VAULT_TOKEN=xyz

# See ./demo/deploy-vault.sh script on an example of how to deploy Hashicorp Vault
# to your Kubernetes cluster.
