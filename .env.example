#!/bin/bash

#---------------------------------------------------------------------------------
# env variables required for running the demo

# mandatory: URL of the container registry to use.
# Default (local Kind registry): localhost:5000
# Azure Container Registry (ACR) example: osmci.azurecr.io/osm
export CTR_REGISTRY=localhost:5000

# mandatory: Password to the container registry to use. Leave blank if no authentication is required.
# For Azure Container Registry (ACR), the following command may be used: az acr credential show -n <your_registry_name> --query "passwords[0].value" | tr -d '"'
# For the local registry stood up with `make kind-up`, this can be left blank.
export CTR_REGISTRY_PASSWORD=
#---------------------------------------------------------------------------------



#---------------------------------------------------------------------------------
# env variables required to use helper scripts (logs, port forwarding etc.)

# optional: Kubernetes namespace where OSM will be installed.
# This cannot be the default namespace because it has to be a namespace that can be deleted.
# Default: osm-system
export K8S_NAMESPACE=osm-system

# optional: name of Kubernetes contexts that OSM will be deployed in multicluster mode
# export ALPHA_CLUSTER=alpha
# export BETA_CLUSTER=beta

# optional: Kubernetes namespace where bookbuyer app will be installed.
# This cannot be the default namespace because it has to be a namespace that can be deleted.
# Default: bookbuyer
export BOOKBUYER_NAMESPACE=bookbuyer

# optional: Kubernetes namespace where bookthief app will be installed.
# This cannot be the default namespace because it has to be a namespace that can be deleted.
# Default: bookthief
export BOOKTHIEF_NAMESPACE=bookthief

# optional: Kubernetes namespace where bookstore app will be installed.
# This cannot be the default namespace because it has to be a namespace that can be deleted.
# Default: bookstore
export BOOKSTORE_NAMESPACE=bookstore

# optional: Kubernetes namespace where bookwarehouse app will be installed.
# This cannot be the default namespace because it has to be a namespace that can be deleted.
# Default: bookwarehouse
export BOOKWAREHOUSE_NAMESPACE=bookwarehouse
#--------------------------------------------------------------------------------



#--------------------------------------------------------------------------------
# optional environment variables used to change defaults

# optional: Name to be used for the Kubernetes secrets resource to be created from the Docker container registry.
# Default: acr-creds
# export CTR_REGISTRY_CREDS_NAME=acr-creds

# optional: A tag for the containers used to version the container images in the registry
# Default: latest
# export CTR_TAG=latest

# optional: The image pull policy for OSM images
# Default: Always
# export IMAGE_PULL_POLICY=Always

# optional: Path to your Kubernetes config file present locally.
# export KUBECONFIG=~/.kube/config

# optional: Enable human readable logs on the console
# export OSM_HUMAN_DEBUG_LOG=true

# optional: Enable logging of observed Kubernetes events (must have trace logging level enabled as well)
# export OSM_LOG_KUBERNETES_EVENTS=true

# optional: Retention time for the data scraped by Prometheus service. Default is 15d
# export PROMETHEUS_RETENTION_TIME=5d

# optional: Name of the bookstore service bookbuyer and bookthief make requests to.
# Default: bookstore
# export BOOKSTORE_SVC=bookstore

# optional: Expected response code when bookthief makes reqeusts to bookstore
# Default: 0 (200 with permissive traffic policy mode)
# export BOOKTHIEF_EXPECTED_RESPONSE_CODE=0

# optional: ENABLE_DEBUG_SERVER (true/false)
# Default: true
# export ENABLE_DEBUG_SERVER=true

# optional: ENABLE_EGRESS (true/false)
# Default: false
# export ENABLE_EGRESS=true

# optional: ENABLE_RECONCILER (true/false)
# Default: false
# export ENABLE_RECONCILER=true

# optional: DEPLOY_GRAFANA (true/false)
# Default: false
# export DEPLOY_GRAFANA=true

# optional: DEPLOY_JAEGER (true/false)
# Default: false
# export DEPLOY_JAEGER=true

# optional: ENABLE_FLUENTBIT (true/false)
# Default: false
# export ENABLE_FLUENTBIT=true

# optional: DEPLOY_PROMETHEUS (true/false)
# Default: false
# export DEPLOY_PROMETHEUS=true

# optional: Maximum of iterations to test for expected return codes. 0 means unlimited.
# export CI_MAX_ITERATIONS_THRESHOLD=0

# optional: Time in seconds that a bookbuyer sleeps between requests.
# Default: 1
# export CI_SLEEP_BETWEEN_REQUESTS_SECONDS=1

# optional: Whether to deploy multiple services (currently bookstore) associated the same service account
# Default: false
# export DEPLOY_WITH_SAME_SA=false

# optional: Whether to deploy traffic split policy or not
# Default: true
# export DEPLOY_TRAFFIC_SPLIT=true

# optional: specify the log level for the enovy's
# Default: debug
# export ENVOY_LOG_LEVEL=debug

### The section below configures certificates management
### OSM has 2 ways to manage certificates
### Set CERT_MANAGER to "tresor" to use the internal system (relies on k8s secrets)
### Set CERT_MANAGER to "vault" to use Hashicorp Vault
### Set CERT_MANAGER to "cert-manager" to use cert-manager

# optional: What certificate manager to use. One of: tresor, vault, or cert-manager
# Default: tresor
# export CERT_MANAGER=tresor

# optional: The mesh name for the osm installation
# Default: osm
# Must conform to same guidlines as a valid Kubernetes label value. Must be 63 characters
# or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z])
# with dashes (-), underscores (_), dots (.), and alphanumerics between.
# export MESH_NAME=osm

### When CERT_MANAGER is set to "vault" the following also have to be set:

### Enable Hashicorp Vault integration
# export CERT_MANAGER=vault

### The Hashicorp Vault host/service - where Vault is installed
# export VAULT_HOST="vault.${K8S_NAMESPACE}.svc.cluster.local"

### The protocol to use to connect to Vault
# export VAULT_PROTOCOL=http

### The token that should be used to connect to Vault
# export VAULT_TOKEN=xyz

### optional: Name of the Vault role dedicated to OSM
#export VAULT_ROLE=openservicemesh

### optional: Whether to configure the demo to run on an OpenShift cluster
# Default: false
#export DEPLOY_ON_OPENSHIFT=false

# optional: Timeout for OSM installation and kubectl --wait commands
# Default: 90s
# export TIMEOUT=90s

### optional: Whether the CTR_REGISTRY is a private container registry
# Default: false
#export USE_PRIVATE_REGISTRY=true

### optional: Whether to publish OSM docker images to container registry
# Default: true
#export PUBLISH_IMAGES=true

# See ./demo/deploy-vault.sh script on an example of how to deploy Hashicorp Vault
# to your Kubernetes cluster.
#--------------------------------------------------------------------------------
