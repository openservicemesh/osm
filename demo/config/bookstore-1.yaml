node:
  id: nodeBookstore1
  cluster: clusterBookstore1

admin:
  access_log_path: "/dev/stdout"
  address:
    socket_address: {address: 0.0.0.0, port_value: 15000}

static_resources:
  listeners:

  - name: listener___local
    address:
      socket_address: {address: 0.0.0.0, port_value: 15003}
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "bookstore.mesh"
              - "bookstore-1.mesh"
              - "bookstore-2.mesh"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: bookstore-1-local
          http_filters:
          - name: envoy.router
            config: {}
          access_log:
            name: envoy.file_access_log
            config:
              path: "/dev/stdout" ## "/var/log/envoy.log"
              json_format:
                start_time: "%START_TIME%"
                method: "%REQ(:METHOD)%"
                path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                protocol: "%PROTOCOL%"
                response_code: "%RESPONSE_CODE%"
                response_flags: "%RESPONSE_FLAGS%"
                bytes_rcvd: "%BYTES_RECEIVED%"
                bytes_snt: "%BYTES_SENT%"
                duration: "%DURATION%"
                x-envoy-upstream-svc-time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                xff: "%REQ(X-FORWARDED-FOR)%"
                user_agent: "%REQ(USER-AGENT)%"
                x-request-id: "%REQ(X-REQUEST-ID)%"
                backend_address: "%UPSTREAM_HOST%"
                client: "%DOWNSTREAM_REMOTE_ADDRESS%"
                referer: "%REQ(REFERER)%"

      tls_context:
        require_client_certificate: true
        common_tls_context:
          tls_certificate_sds_secret_configs:
          - name: server_cert
            sds_config:
              api_config_source:
                api_type: GRPC
                grpc_services:
                  envoy_grpc:
                    cluster_name: sds


  clusters:

  - name: bookstore-1-local
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    ## http2_protocol_options: {}   ## this is required to enable HTTP/2
    dns_lookup_family: V4_ONLY
    hosts:
    - socket_address:
        address: 0.0.0.0  # Tested it from the envoy pod - this works for sure
        port_value: 80    # with this port


  - name: sds
    connect_timeout: 5s
    type: LOGICAL_DNS
    http2_protocol_options: {}
    tls_context:
      common_tls_context:
        tls_params:
          tls_minimum_protocol_version: TLSv1_2
          tls_maximum_protocol_version: TLSv1_3
          cipher_suites: "[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]"
        tls_certificates:
          - certificate_chain: { filename: "/etc/ssl/certs/cert.pem" }
            private_key: { filename: "/etc/ssl/certs/key.pem" }
    load_assignment:
      cluster_name: sds
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: sds.smc.svc.cluster.local
                port_value: 15123

  - name: eds
    connect_timeout: 5s
    type: LOGICAL_DNS
    http2_protocol_options: {}
    tls_context:
      common_tls_context:
        tls_params:
          tls_minimum_protocol_version: TLSv1_2
          tls_maximum_protocol_version: TLSv1_3
          cipher_suites: "[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]"
        tls_certificates:
          - certificate_chain: { filename: "/etc/ssl/certs/cert.pem" }
            private_key: { filename: "/etc/ssl/certs/key.pem" }
    load_assignment:
      cluster_name: eds
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: eds.smc.svc.cluster.local
                port_value: 15124

  - name: cds
    connect_timeout: 5s
    type: LOGICAL_DNS
    http2_protocol_options: {}
    tls_context:
      common_tls_context:
        tls_params:
          tls_minimum_protocol_version: TLSv1_2
          tls_maximum_protocol_version: TLSv1_3
          cipher_suites: "[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]"
        tls_certificates:
          - certificate_chain: { filename: "/etc/ssl/certs/cert.pem" }
            private_key: { filename: "/etc/ssl/certs/key.pem" }
    load_assignment:
      cluster_name: cds
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: cds.smc.svc.cluster.local
                port_value: 15125

  - name: rds
    connect_timeout: 5s
    type: LOGICAL_DNS
    http2_protocol_options: {}
    tls_context:
      common_tls_context:
        tls_params:
          tls_minimum_protocol_version: TLSv1_2
          tls_maximum_protocol_version: TLSv1_3
          cipher_suites: "[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]"
        tls_certificates:
          - certificate_chain: { filename: "/etc/ssl/certs/cert.pem" }
            private_key: { filename: "/etc/ssl/certs/key.pem" }
    load_assignment:
      cluster_name: rds
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: rds.smc.svc.cluster.local
                port_value: 15126
