// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openservicemesh/osm/pkg/config (interfaces: Controller)

// Package config is a generated GoMock package.
package config

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha2 "github.com/openservicemesh/osm/pkg/apis/config/v1alpha2"
)

// MockController is a mock of Controller interface.
type MockController struct {
	ctrl     *gomock.Controller
	recorder *MockControllerMockRecorder
}

// MockControllerMockRecorder is the mock recorder for MockController.
type MockControllerMockRecorder struct {
	mock *MockController
}

// NewMockController creates a new mock instance.
func NewMockController(ctrl *gomock.Controller) *MockController {
	mock := &MockController{ctrl: ctrl}
	mock.recorder = &MockControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockController) EXPECT() *MockControllerMockRecorder {
	return m.recorder
}

// GetMultiClusterService mocks base method.
func (m *MockController) GetMultiClusterService(arg0, arg1 string) *v1alpha2.MultiClusterService {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMultiClusterService", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha2.MultiClusterService)
	return ret0
}

// GetMultiClusterService indicates an expected call of GetMultiClusterService.
func (mr *MockControllerMockRecorder) GetMultiClusterService(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMultiClusterService", reflect.TypeOf((*MockController)(nil).GetMultiClusterService), arg0, arg1)
}

// GetMultiClusterServiceByServiceAccount mocks base method.
func (m *MockController) GetMultiClusterServiceByServiceAccount(arg0, arg1 string) []v1alpha2.MultiClusterService {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMultiClusterServiceByServiceAccount", arg0, arg1)
	ret0, _ := ret[0].([]v1alpha2.MultiClusterService)
	return ret0
}

// GetMultiClusterServiceByServiceAccount indicates an expected call of GetMultiClusterServiceByServiceAccount.
func (mr *MockControllerMockRecorder) GetMultiClusterServiceByServiceAccount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMultiClusterServiceByServiceAccount", reflect.TypeOf((*MockController)(nil).GetMultiClusterServiceByServiceAccount), arg0, arg1)
}

// ListMultiClusterServices mocks base method.
func (m *MockController) ListMultiClusterServices() []v1alpha2.MultiClusterService {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMultiClusterServices")
	ret0, _ := ret[0].([]v1alpha2.MultiClusterService)
	return ret0
}

// ListMultiClusterServices indicates an expected call of ListMultiClusterServices.
func (mr *MockControllerMockRecorder) ListMultiClusterServices() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMultiClusterServices", reflect.TypeOf((*MockController)(nil).ListMultiClusterServices))
}
