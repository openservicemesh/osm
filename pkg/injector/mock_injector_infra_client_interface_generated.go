// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openservicemesh/osm/pkg/injector (interfaces: InjectorInfraClient)

// Package injector is a generated GoMock package.
package injector

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/openservicemesh/osm/pkg/models"
)

// MockInjectorInfraClient is a mock of InjectorInfraClient interface.
type MockInjectorInfraClient struct {
	ctrl     *gomock.Controller
	recorder *MockInjectorInfraClientMockRecorder
}

// MockInjectorInfraClientMockRecorder is the mock recorder for MockInjectorInfraClient.
type MockInjectorInfraClientMockRecorder struct {
	mock *MockInjectorInfraClient
}

// NewMockInjectorInfraClient creates a new mock instance.
func NewMockInjectorInfraClient(ctrl *gomock.Controller) *MockInjectorInfraClient {
	mock := &MockInjectorInfraClient{ctrl: ctrl}
	mock.recorder = &MockInjectorInfraClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInjectorInfraClient) EXPECT() *MockInjectorInfraClientMockRecorder {
	return m.recorder
}

// GetSecret mocks base method.
func (m *MockInjectorInfraClient) GetSecret(arg0, arg1 string) *models.Secret {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", arg0, arg1)
	ret0, _ := ret[0].(*models.Secret)
	return ret0
}

// GetSecret indicates an expected call of GetSecret.
func (mr *MockInjectorInfraClientMockRecorder) GetSecret(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockInjectorInfraClient)(nil).GetSecret), arg0, arg1)
}

// ListSecrets mocks base method.
func (m *MockInjectorInfraClient) ListSecrets() []*models.Secret {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSecrets")
	ret0, _ := ret[0].([]*models.Secret)
	return ret0
}

// ListSecrets indicates an expected call of ListSecrets.
func (mr *MockInjectorInfraClientMockRecorder) ListSecrets() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSecrets", reflect.TypeOf((*MockInjectorInfraClient)(nil).ListSecrets))
}

// UpdateSecret mocks base method.
func (m *MockInjectorInfraClient) UpdateSecret(arg0 context.Context, arg1 *models.Secret) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSecret", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSecret indicates an expected call of UpdateSecret.
func (mr *MockInjectorInfraClientMockRecorder) UpdateSecret(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSecret", reflect.TypeOf((*MockInjectorInfraClient)(nil).UpdateSecret), arg0, arg1)
}
