// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openservicemesh/osm/pkg/debugger (interfaces: DebuggerInfraClient)

// Package debugger is a generated GoMock package.
package debugger

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha2 "github.com/openservicemesh/osm/pkg/apis/config/v1alpha2"
	models "github.com/openservicemesh/osm/pkg/models"
	rest "k8s.io/client-go/rest"
)

// MockDebuggerInfraClient is a mock of DebuggerInfraClient interface.
type MockDebuggerInfraClient struct {
	ctrl     *gomock.Controller
	recorder *MockDebuggerInfraClientMockRecorder
}

// MockDebuggerInfraClientMockRecorder is the mock recorder for MockDebuggerInfraClient.
type MockDebuggerInfraClientMockRecorder struct {
	mock *MockDebuggerInfraClient
}

// NewMockDebuggerInfraClient creates a new mock instance.
func NewMockDebuggerInfraClient(ctrl *gomock.Controller) *MockDebuggerInfraClient {
	mock := &MockDebuggerInfraClient{ctrl: ctrl}
	mock.recorder = &MockDebuggerInfraClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDebuggerInfraClient) EXPECT() *MockDebuggerInfraClientMockRecorder {
	return m.recorder
}

// GetMeshConfig mocks base method.
func (m *MockDebuggerInfraClient) GetMeshConfig() v1alpha2.MeshConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMeshConfig")
	ret0, _ := ret[0].(v1alpha2.MeshConfig)
	return ret0
}

// GetMeshConfig indicates an expected call of GetMeshConfig.
func (mr *MockDebuggerInfraClientMockRecorder) GetMeshConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMeshConfig", reflect.TypeOf((*MockDebuggerInfraClient)(nil).GetMeshConfig))
}

// GetProxyConfig mocks base method.
func (m *MockDebuggerInfraClient) GetProxyConfig(arg0 *models.Proxy, arg1 string, arg2 *rest.Config) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProxyConfig", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProxyConfig indicates an expected call of GetProxyConfig.
func (mr *MockDebuggerInfraClientMockRecorder) GetProxyConfig(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProxyConfig", reflect.TypeOf((*MockDebuggerInfraClient)(nil).GetProxyConfig), arg0, arg1, arg2)
}

// ListNamespaces mocks base method.
func (m *MockDebuggerInfraClient) ListNamespaces() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNamespaces")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNamespaces indicates an expected call of ListNamespaces.
func (mr *MockDebuggerInfraClientMockRecorder) ListNamespaces() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNamespaces", reflect.TypeOf((*MockDebuggerInfraClient)(nil).ListNamespaces))
}
