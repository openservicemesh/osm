/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/open-service-mesh/osm/pkg/apis/osmconfig/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OSMConfigLister helps list OSMConfigs.
// All objects returned here must be treated as read-only.
type OSMConfigLister interface {
	// List lists all OSMConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.OSMConfig, err error)
	// OSMConfigs returns an object that can list and get OSMConfigs.
	OSMConfigs(namespace string) OSMConfigNamespaceLister
	OSMConfigListerExpansion
}

// oSMConfigLister implements the OSMConfigLister interface.
type oSMConfigLister struct {
	indexer cache.Indexer
}

// NewOSMConfigLister returns a new OSMConfigLister.
func NewOSMConfigLister(indexer cache.Indexer) OSMConfigLister {
	return &oSMConfigLister{indexer: indexer}
}

// List lists all OSMConfigs in the indexer.
func (s *oSMConfigLister) List(selector labels.Selector) (ret []*v1.OSMConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.OSMConfig))
	})
	return ret, err
}

// OSMConfigs returns an object that can list and get OSMConfigs.
func (s *oSMConfigLister) OSMConfigs(namespace string) OSMConfigNamespaceLister {
	return oSMConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OSMConfigNamespaceLister helps list and get OSMConfigs.
// All objects returned here must be treated as read-only.
type OSMConfigNamespaceLister interface {
	// List lists all OSMConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.OSMConfig, err error)
	// Get retrieves the OSMConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.OSMConfig, error)
	OSMConfigNamespaceListerExpansion
}

// oSMConfigNamespaceLister implements the OSMConfigNamespaceLister
// interface.
type oSMConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OSMConfigs in the indexer for a given namespace.
func (s oSMConfigNamespaceLister) List(selector labels.Selector) (ret []*v1.OSMConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.OSMConfig))
	})
	return ret, err
}

// Get retrieves the OSMConfig from the indexer for a given namespace and name.
func (s oSMConfigNamespaceLister) Get(name string) (*v1.OSMConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("osmconfig"), name)
	}
	return obj.(*v1.OSMConfig), nil
}
