# Custom Resource Definition (CRD) for OSM's UpstreamTrafficSetting API.
#
# Copyright Open Service Mesh authors.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: upstreamtrafficsettings.policy.openservicemesh.io
  labels:
    app.kubernetes.io/name : "openservicemesh.io"
spec:
  group: policy.openservicemesh.io
  scope: Namespaced
  names:
    kind: UpstreamTrafficSetting
    listKind: UpstreamTrafficSettingList
    shortNames:
      - upstreamtrafficsetting
    singular: upstreamtrafficsetting
    plural: upstreamtrafficsettings
  conversion:
    strategy: None
  versions:
    - name: v1alpha1
      served: true
      storage: true
      additionalPrinterColumns:
      - description: Current status of the UpstreamTrafficSetting policy.
        jsonPath: .status.currentStatus
        name: Status
        type: string
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - host
              properties:
                host:
                  description: Upstream host the policy is applicabe to.
                  type: string
                connectionSettings:
                  description: Connection settings for the upstream host.
                  type: object
                  properties:
                    tcp:
                      description: TCP connection settings.
                      type: object
                      properties:
                        maxConnections:
                          description: Maximum number of TCP connections.
                          type: integer
                          minimum: 0
                        connectTimeout:
                          description: TCP connection timeout.
                          type: string
                    http:
                      description: HTTP connection settings.
                      type: object
                      properties:
                        maxRequests:
                          description: Maximum number of parallel HTTP requests allowed.
                          type: integer
                          minimum: 0
                        maxRequestsPerConnection:
                          description: Maximum number of HTTP requests per connection allowed.
                          type: integer
                          minimum: 0
                        maxPendingRequests:
                          description: Maximum number of pending HTTP/1.1 requests allowed.
                          type: integer
                          minimum: 0
                        maxRetries:
                          description: Maximum number of parallel retries allowed.
                          type: integer
                          minimum: 0
                rateLimit:
                  description: Rate limiting policy.
                  type: object
                  properties:
                    local:
                      description: Policy responsible for rate limiting traffic at the upstream service.
                      type: object
                      properties:
                        tcp:
                          description: TCP level local rate limiting to limit the number of connections per unit of time.
                          type: object
                          properties:
                            connections:
                              description: Connections defines the number of connections allowed per unit of time before
                                rate limiting occurs.
                              type: integer
                              minimum: 1
                            unit:
                              description: Unit defines the period of time within which connections over the limit will be
                                rate limited. Valid values are "second", "minute" and "hour".
                              type: string
                              enum:
                              - second
                              - minute
                              - hour
                            burst:
                              description: Burst (optional) defines the number of connections above the baseline rate that are allowed
                                in a short period of time.
                              type: integer
                        http:
                          description: HTTP level local rate limiting to limit the number of requests per unit of time.
                          type: object
                          properties:
                            requests:
                              description: Requests defines the number of requests allowed per unit of time before rate
                                limiting occurs.
                              type: integer
                              minimum: 1
                            unit:
                              description: Unit defines the period of time within which requests over the limit will be
                                rate limited. Valid values are "second", "minute" and "hour".
                              type: string
                              enum:
                              - second
                              - minute
                              - hour
                            burst:
                              description: Burst (optional) defines the number of requests above the baseline rate that are allowed
                                in a short period of time.
                              type: integer
                            responseStatusCode:
                              description: ResponseStatusCode (optional) defines the HTTP status code to use for responses to rate
                                limited requests. Code must be in the 400-599 (inclusive) error range. If not specified,
                                a default of 429 (Too Many Requests) is used.
                              type: integer
                              minimum: 400
                              maximum: 599
                            responseHeadersToAdd:
                              description: ResponseHeadersToAdd (optional) defines the list of HTTP headers that should be added
                                to each response for requests that have been rate limited.
                              type: array
                              items:
                                description: Defines an HTTP header name/value pair.
                                type: object
                                required:
                                - name
                                - value
                                properties:
                                  name:
                                    description: Name defines the HTTP header name.
                                    type: string
                                    minLength: 1
                                  value:
                                    description: Value defines the HTTP header value.
                                    type: string
                                    minLength: 1
                httpRoutes:
                  description: HTTPRoutes defines the list of HTTP routes settings for the upstream host.
                    Settings are applied at a per route level.
                  type: array
                  items:
                    description: HTTP route settings for the given path.
                    type: object
                    properties:
                      path:
                        description: Path defines the HTTP path. This can be an RE2 regex value.
                        type: string
                        minLength: 1
                      rateLimit:
                        description: Rate limiting policy applied per route.
                        type: object
                        properties:
                          local:
                            description: Local rate limiting policy applied per route.
                            type: object
                            properties:
                              requests:
                                description: Requests defines the number of requests allowed per unit of time before rate
                                  limiting occurs.
                                type: integer
                                minimum: 1
                              unit:
                                description: Unit defines the period of time within which requests over the limit will be
                                  rate limited. Valid values are "second", "minute" and "hour".
                                type: string
                                enum:
                                - second
                                - minute
                                - hour
                              burst:
                                description: Burst (optional) defines the number of requests above the baseline rate that are allowed
                                  in a short period of time.
                                type: integer
                              responseStatusCode:
                                description: ResponseStatusCode (optional) defines the HTTP status code to use for responses to rate
                                  limited requests. Code must be in the 400-599 (inclusive) error range. If not specified,
                                  a default of 429 (Too Many Requests) is used.
                                type: integer
                                minimum: 400
                                maximum: 599
                              responseHeadersToAdd:
                                description: ResponseHeadersToAdd (optional) defines the list of HTTP headers that should be added
                                  to each response for requests that have been rate limited.
                                type: array
                                items:
                                  description: Defines an HTTP header name/value pair.
                                  type: object
                                  required:
                                  - name
                                  - value
                                  properties:
                                    name:
                                      description: Name defines the HTTP header name.
                                      type: string
                                      minLength: 1
                                    value:
                                      description: Value defines the HTTP header value.
                                      type: string
                                      minLength: 1
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
      subresources:
        # status enables the status subresource
        status: {}
