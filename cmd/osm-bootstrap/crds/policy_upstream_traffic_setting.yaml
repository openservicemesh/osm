# Custom Resource Definition (CRD) for OSM's UpstreamTrafficSetting API.
#
# Copyright Open Service Mesh authors.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: upstreamtrafficsettings.policy.openservicemesh.io
  labels:
    app.kubernetes.io/name : "openservicemesh.io"
spec:
  group: policy.openservicemesh.io
  scope: Namespaced
  names:
    kind: UpstreamTrafficSetting
    listKind: UpstreamTrafficSettingList
    shortNames:
      - upstreamtrafficsetting
    singular: upstreamtrafficsetting
    plural: upstreamtrafficsettings
  versions:
    - name: v1alpha1
      served: true
      storage: true
      additionalPrinterColumns:
      - description: Current status of the UpstreamTrafficSetting policy.
        jsonPath: .status.currentStatus
        name: Status
        type: string
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - host
              properties:
                host:
                  description: Upstream host the policy is applicabe to.
                  type: string
                connectionSettings:
                  description: Connection settings for the upstream host.
                  type: object
                  properties:
                    tcp:
                      description: TCP connection settings.
                      type: object
                      properties:
                        maxConnections:
                          description: Maximum number of TCP connections.
                          type: integer
                          minimum: 0
                        connectTimeout:
                          description: TCP connection timeout.
                          type: string
                    http:
                      description: HTTP connection settings.
                      type: object
                      properties:
                        maxRequests:
                          description: Maximum number of parallel HTTP requests allowed.
                          type: integer
                          minimum: 0
                        maxRequestsPerConnection:
                          description: Maximum number of HTTP requests per connection allowed.
                          type: integer
                          minimum: 0
                        maxPendingRequests:
                          description: Maximum number of pending HTTP/1.1 requests allowed.
                          type: integer
                          minimum: 0
                        maxRetries:
                          description: Maximum number of parallel retries allowed.
                          type: integer
                          minimum: 0
                rateLimit:
                  description: Rate limiting policy.
                  type: object
                  properties:
                    local:
                      description: Local rate limit policy responsible for rate limiting traffic at the upstream service.
                      type: object
                      properties:
                        tcp:
                          description: TCP level local rate limiting to limit the number of connections per unit of time.
                          type: object
                          properties:
                            connections:
                              description: Connections defines the number of connections allowed per unit of time before
                                rate limiting occurs.
                              type: integer
                              minimum: 1
                            unit:
                              description: Unit defines the period of time within which connections over the limit will be
                                rate limited. Valid values are "second", "minute" and "hour".
                              type: string
                              enum:
                              - second
                              - minute
                              - hour
                            burst:
                              description: Burst (optional) defines the number of connections above the baseline rate that are allowed
                                in a short period of time.
                              type: integer
                        http:
                          description: HTTP level local rate limiting to limit the number of requests per unit of time.
                          type: object
                          properties:
                            requests:
                              description: Requests defines the number of requests allowed per unit of time before rate
                                limiting occurs.
                              type: integer
                              minimum: 1
                            unit:
                              description: Unit defines the period of time within which requests over the limit will be
                                rate limited. Valid values are "second", "minute" and "hour".
                              type: string
                              enum:
                              - second
                              - minute
                              - hour
                            burst:
                              description: Burst (optional) defines the number of requests above the baseline rate that are allowed
                                in a short period of time.
                              type: integer
                            responseStatusCode:
                              description: ResponseStatusCode (optional) defines the HTTP status code to use for responses to rate
                                limited requests. Code must be in the 400-599 (inclusive) error range. If not specified,
                                a default of 429 (Too Many Requests) is used.
                              type: integer
                              minimum: 400
                              maximum: 599
                            responseHeadersToAdd:
                              description: ResponseHeadersToAdd (optional) defines the list of HTTP headers that should be added
                                to each response for requests that have been rate limited.
                              type: array
                              items:
                                description: Defines an HTTP header name/value pair.
                                type: object
                                required:
                                - name
                                - value
                                properties:
                                  name:
                                    description: Name defines the HTTP header name.
                                    type: string
                                    minLength: 1
                                  value:
                                    description: Value defines the HTTP header value.
                                    type: string
                                    minLength: 1
                    global:
                      description: Global rate limit policy responsible for rate limiting traffic to the upstream service.
                      type: object
                      properties:
                        tcp:
                          description: Global rate limit policy for TCP connections.
                          type: object
                          required:
                          - rateLimitService
                          - domain
                          - descriptors
                          properties:
                            rateLimitService:
                              description: Rate limit service to use as a global rate limiter.
                              type: object
                              required:
                              - host
                              - port
                              properties:
                                host:
                                  description: Hostname of the global rate limit service.
                                  type: string
                                  minLength: 1
                                port:
                                  description: Port of the global rate limit service.
                                  type: integer
                                  minimum: 1
                                  maximum: 65535
                            domain:
                              description: Domain defines a container for a set of rate limits.
                                All domains known to the Ratelimit service must be globally unique.
                                They serve as a way to have different rate limit configurations that
                                don't conflict.
                              type: string
                            descriptors:
                              description: List of rate limit descriptors to use in the rate limit service request.
                              type: array
                              minItems: 1
                              items:
                                description: Rate limit descriptor to use in the rate limit service request.
                                type: object
                                required:
                                - entries
                                properties:
                                  entries:
                                    description: List of rate limit descriptor entries for the descriptor.
                                    type: array
                                    minItems: 1
                                    items:
                                      description: Descriptor entry.
                                      type: object
                                      required:
                                      - key
                                      - value
                                      properties:
                                        key:
                                          description: Key of the descriptor entry.
                                          type: string
                                        value:
                                          description: Value of the descriptor entry.
                                          type: string
                            timeout:
                              description: Timeout (optional) interval for calls to the rate limit service. Defaults to 20ms.
                              type: string
                            failOpen:
                              description: FailOpen (optional) defines whether to allow traffic in case of communication failure between
                                rate limiting service and the proxy. Defaults to true.
                              type: boolean
                        http:
                          description: Global rate limit policy for HTTP requests.
                          type: object
                          required:
                          - rateLimitService
                          - domain
                          - descriptors
                          properties:
                            rateLimitService:
                              description: Rate limit service to use as a global rate limiter.
                              type: object
                              required:
                              - host
                              - port
                              properties:
                                host:
                                  description: Hostname of the global rate limit service.
                                  type: string
                                  minLength: 1
                                port:
                                  description: Port of the global rate limit service.
                                  type: integer
                                  minimum: 1
                                  maximum: 65535
                            domain:
                              description: Domain defines a container for a set of rate limits.
                                All domains known to the Ratelimit service must be globally unique.
                                They serve as a way to have different rate limit configurations that
                                don't conflict.
                              type: string
                            descriptors:
                              description: List of rate limit descriptors to use in the rate limit service request.
                              type: array
                              minItems: 1
                              items:
                                description: Rate limit descriptor to use in the rate limit service request.
                                type: object
                                required:
                                - entries
                                properties:
                                  entries:
                                    description: List of rate limit descriptor entries for the descriptor.
                                    type: array
                                    minItems: 1
                                    items:
                                        description: Descriptor entry.
                                        type: object
                                        properties:
                                          genericKey:
                                            description: GenericKey (optional) defines a descriptor entry with a static key-value pair.
                                            type: object
                                            required:
                                            - value
                                            properties:
                                              value:
                                                description: Value of the genericKey descriptor entry
                                                type: string
                                                minLength: 1
                                              key:
                                                description: Key (optional) of the genericKey descriptor entry. Defaults to 'generic_key'.
                                                type: string
                                                minLength: 1
                                          remoteAddress:
                                            description: RemoteAddress (optional) defines a descriptor entry with with key 'remote_address'
                                              and value equal to the client's IP address derived from the x-forwarded-for header.
                                            type: object
                                          requestHeader:
                                            description: RequestHeader (optional) defines a descriptor entry that is generated only when the
                                              request header matches the given header name. The value of the descriptor entry is derived from
                                              the value of the header present in the request.
                                            type: object
                                            required:
                                            - name
                                            - key
                                            properties:
                                              name:
                                                description: Name of the header used to look up the descriptor entry's value.
                                                type: string
                                                minLength: 1
                                              key:
                                                description: Key of the requestHeader descriptor entry.
                                                type: string
                                                minLength: 1
                                          headerValueMatch:
                                            description: HeaderValueMatch (optional) defines a descriptor entry that is generated when the
                                              request header matches the given HTTP header match criteria.
                                            type: object
                                            required:
                                            - value
                                            - headers
                                            properties:
                                              value:
                                                description: Value of the headerValueMatch descriptor entry
                                                type: string
                                                minLength: 1
                                              headers:
                                                description: List of HTTP header match criteria used to determine whether the descriptor entry
                                                  should be generated for the request. A match will happen if all the specified headers are
                                                  present in the request with the same values, or based on presence if the value field is not set.
                                                type: array
                                                minItems: 1
                                                items:
                                                  description: Header match criteria.
                                                  type: object
                                                  required:
                                                  - name
                                                  properties:
                                                    name:
                                                      description: Name of the header to match.
                                                      type: string
                                                      minLength: 1
                                                    exact:
                                                      description: Exact (optional) value to match against the given header name.
                                                      type: string
                                                      minLength: 1
                                                    prefix:
                                                      description: Prefix (optional) value to match against the given header name.
                                                      type: string
                                                      minLength: 1
                                                    suffix:
                                                      description: Suffix (optional) value to match against the given header name.
                                                      type: string
                                                      minLength: 1
                                                    regex:
                                                      description: Regex (optional) value to match against the given header name.
                                                      type: string
                                                      minLength: 1
                                                    contains:
                                                      description: Contains (optional) value to match against the given header name.
                                                      type: string
                                                      minLength: 1
                                                    present:
                                                      description: Present (optional) defines whether the request matches the criteria
                                                        when the header is present. If set to false, header match will be performed
                                                        based on whether the header is absent.
                                                      type: boolean
                                                  oneOf:
                                                  - required: ["name", "exact"]
                                                  - required: ["name", "prefix"]
                                                  - required: ["name", "suffix"]
                                                  - required: ["name", "regex"]
                                                  - required: ["name", "contains"]
                                                  - required: ["name", "present"]
                                              key:
                                                description: Key (optional) of the headerValueMatch descriptor entry. Defaults to 'header_match'.
                                                type: string
                                              expectMatch:
                                                description: ExpectMatch (optional) defines whether the request must match the given match
                                                  criteria for the descriptor entry to be generated. If set to false, a descriptor entry will
                                                  be generated when the request does not match the match criteria. Defaults to true.
                                                type: boolean
                                        oneOf:
                                          - required: ["genericKey"]
                                          - required: ["remoteAddress"]
                                          - required: ["requestHeader"]
                                          - required: ["headerValueMatch"]
                            timeout:
                              description: Timeout (optional) interval for calls to the rate limit service. Defaults to 20ms.
                              type: string
                            failOpen:
                              description: FailOpen (optional) defines whether to allow traffic in case of communication failure between
                                rate limiting service and the proxy. Defaults to true.
                              type: boolean
                            enableXRateLimitHeaders:
                              description: EnableXRateLimitHeaders (optional) defines whether to include the headers
                                X-RateLimit-Limit, X-RateLimit-Remaining, and X-RateLimit-Reset on responses to clients
                                when the rate limit service is consulted for a request. Defaults to false.
                              type: boolean
                httpRoutes:
                  description: HTTPRoutes defines the list of HTTP routes settings for the upstream host.
                    Settings are applied at a per route level.
                  type: array
                  items:
                    description: HTTP route settings for the given path.
                    type: object
                    properties:
                      path:
                        description: Path defines the HTTP path. This can be an RE2 regex value.
                        type: string
                        minLength: 1
                      rateLimit:
                        description: Rate limiting policy applied per route.
                        type: object
                        properties:
                          local:
                            description: Local rate limiting policy applied per route.
                            type: object
                            properties:
                              requests:
                                description: Requests defines the number of requests allowed per unit of time before rate
                                  limiting occurs.
                                type: integer
                                minimum: 1
                              unit:
                                description: Unit defines the period of time within which requests over the limit will be
                                  rate limited. Valid values are "second", "minute" and "hour".
                                type: string
                                enum:
                                - second
                                - minute
                                - hour
                              burst:
                                description: Burst (optional) defines the number of requests above the baseline rate that are allowed
                                  in a short period of time.
                                type: integer
                              responseStatusCode:
                                description: ResponseStatusCode (optional) defines the HTTP status code to use for responses to rate
                                  limited requests. Code must be in the 400-599 (inclusive) error range. If not specified,
                                  a default of 429 (Too Many Requests) is used.
                                type: integer
                                minimum: 400
                                maximum: 599
                              responseHeadersToAdd:
                                description: ResponseHeadersToAdd (optional) defines the list of HTTP headers that should be added
                                  to each response for requests that have been rate limited.
                                type: array
                                items:
                                  description: Defines an HTTP header name/value pair.
                                  type: object
                                  required:
                                  - name
                                  - value
                                  properties:
                                    name:
                                      description: Name defines the HTTP header name.
                                      type: string
                                      minLength: 1
                                    value:
                                      description: Value defines the HTTP header value.
                                      type: string
                                      minLength: 1
                          global:
                            description: Global rate limiting policy applied per route.
                            type: object
                            required:
                            - descriptors
                            properties:
                              descriptors:
                                description: List of rate limit descriptors to use in the rate limit service request.
                                type: array
                                minItems: 1
                                items:
                                  description: Rate limit descriptor to use in the rate limit service request.
                                  type: object
                                  required:
                                  - entries
                                  properties:
                                    entries:
                                      description: List of rate limit descriptor entries for the descriptor.
                                      type: array
                                      minItems: 1
                                      items:
                                          description: Descriptor entry.
                                          type: object
                                          properties:
                                            genericKey:
                                              description: GenericKey (optional) defines a descriptor entry with a static key-value pair.
                                              type: object
                                              required:
                                              - value
                                              properties:
                                                value:
                                                  description: Value of the genericKey descriptor entry
                                                  type: string
                                                  minLength: 1
                                                key:
                                                  description: Key (optional) of the genericKey descriptor entry. Defaults to 'generic_key'.
                                                  type: string
                                                  minLength: 1
                                            remoteAddress:
                                              description: RemoteAddress (optional) defines a descriptor entry with with key 'remote_address'
                                                and value equal to the client's IP address derived from the x-forwarded-for header.
                                              type: object
                                            requestHeader:
                                              description: RequestHeader (optional) defines a descriptor entry that is generated only when the
                                                request header matches the given header name. The value of the descriptor entry is derived from
                                                the value of the header present in the request.
                                              type: object
                                              required:
                                              - name
                                              - key
                                              properties:
                                                name:
                                                  description: Name of the header used to look up the descriptor entry's value.
                                                  type: string
                                                  minLength: 1
                                                key:
                                                  description: Key of the requestHeader descriptor entry.
                                                  type: string
                                                  minLength: 1
                                            headerValueMatch:
                                              description: HeaderValueMatch (optional) defines a descriptor entry that is generated when the
                                                request header matches the given HTTP header match criteria.
                                              type: object
                                              required:
                                              - value
                                              - headers
                                              properties:
                                                value:
                                                  description: Value of the headerValueMatch descriptor entry
                                                  type: string
                                                  minLength: 1
                                                headers:
                                                  description: List of HTTP header match criteria used to determine whether the descriptor entry
                                                    should be generated for the request. A match will happen if all the specified headers are
                                                    present in the request with the same values, or based on presence if the value field is not set.
                                                  type: array
                                                  minItems: 1
                                                  items:
                                                    description: Header match criteria.
                                                    type: object
                                                    required:
                                                    - name
                                                    properties:
                                                      name:
                                                        description: Name of the header to match.
                                                        type: string
                                                        minLength: 1
                                                      exact:
                                                        description: Exact (optional) value to match against the given header name.
                                                        type: string
                                                        minLength: 1
                                                      prefix:
                                                        description: Prefix (optional) value to match against the given header name.
                                                        type: string
                                                        minLength: 1
                                                      suffix:
                                                        description: Suffix (optional) value to match against the given header name.
                                                        type: string
                                                        minLength: 1
                                                      regex:
                                                        description: Regex (optional) value to match against the given header name.
                                                        type: string
                                                        minLength: 1
                                                      contains:
                                                        description: Contains (optional) value to match against the given header name.
                                                        type: string
                                                        minLength: 1
                                                      present:
                                                        description: Present (optional) defines whether the request matches the criteria
                                                          when the header is present. If set to false, header match will be performed
                                                          based on whether the header is absent.
                                                        type: boolean
                                                    oneOf:
                                                    - required: ["name", "exact"]
                                                    - required: ["name", "prefix"]
                                                    - required: ["name", "suffix"]
                                                    - required: ["name", "regex"]
                                                    - required: ["name", "contains"]
                                                    - required: ["name", "present"]
                                                key:
                                                  description: Key (optional) of the headerValueMatch descriptor entry. Defaults to 'header_match'.
                                                  type: string
                                                expectMatch:
                                                  description: ExpectMatch (optional) defines whether the request must match the given match
                                                    criteria for the descriptor entry to be generated. If set to false, a descriptor entry will
                                                    be generated when the request does not match the match criteria. Defaults to true.
                                                  type: boolean
                                          oneOf:
                                            - required: ["genericKey"]
                                            - required: ["remoteAddress"]
                                            - required: ["requestHeader"]
                                            - required: ["headerValueMatch"]
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
      subresources:
        # status enables the status subresource
        status: {}
