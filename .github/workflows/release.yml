name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  version:
    name: Set Version from git ref
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - id: version
        run: echo "::set-output name=version::$(sed 's#^refs/tags/\(.*\)#\1#' <<< '${{ github.ref }}')"

  binaries:
    name: Binaries
    runs-on: ubuntu-latest
    needs: version
    env:
      CLI_VERSION: ${{ needs.version.outputs.version }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore Module Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod2-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod2-
      - name: Restore Build Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-gobuild-${{ hashFiles('**/*.go') }}
      - name: Setup Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Build Binaries
        run: |
          make release-artifacts
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Upload macOS .zip
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "_dist/osm-${{ env.CLI_VERSION }}-darwin-amd64.zip"
          asset_name: "osm-${{ env.CLI_VERSION }}-darwin-amd64.zip"
          asset_content_type: application/zip
      - name: Upload macOS .tar.gz
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "_dist/osm-${{ env.CLI_VERSION }}-darwin-amd64.tar.gz"
          asset_name: "osm-${{ env.CLI_VERSION }}-darwin-amd64.tar.gz"
          asset_content_type: application/gzip
      - name: Upload Linux .zip
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "_dist/osm-${{ env.CLI_VERSION }}-linux-amd64.zip"
          asset_name: "osm-${{ env.CLI_VERSION }}-linux-amd64.zip"
          asset_content_type: application/zip
      - name: Upload Linux .tar.gz
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "_dist/osm-${{ env.CLI_VERSION }}-linux-amd64.tar.gz"
          asset_name: "osm-${{ env.CLI_VERSION }}-linux-amd64.tar.gz"
          asset_content_type: application/gzip
      - name: Upload Windows .zip
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "_dist/osm-${{ env.CLI_VERSION }}-windows-amd64.zip"
          asset_name: "osm-${{ env.CLI_VERSION }}-windows-amd64.zip"
          asset_content_type: application/zip
      - name: Upload Windows .tar.gz
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "_dist/osm-${{ env.CLI_VERSION }}-windows-amd64.tar.gz"
          asset_name: "osm-${{ env.CLI_VERSION }}-windows-amd64.tar.gz"
          asset_content_type: application/gzip
      - name: Upload Checksums
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: _dist/sha256sums.txt
          asset_name: sha256sums.txt
          asset_content_type: text/plain

  images:
    name: Docker Images
    runs-on: ubuntu-latest
    needs: version
    env:
      DOCKER_USER: ${{ secrets.RELEASE_DOCKER_USER }}
      DOCKER_PASS: ${{ secrets.RELEASE_DOCKER_PASS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore Module Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod2-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod2-
      - name: Restore Build Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-gobuild-${{ hashFiles('**/*.go') }}
      - name: Setup Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Docker Login
        run: docker login --username "$DOCKER_USER" --password-stdin <<< "$DOCKER_PASS"
      - name: Push images with version tag
        env:
          CTR_TAG: ${{ needs.version.outputs.version }}
        run: make docker-push
      - name: Push images with latest tag
        env:
          CTR_TAG: latest
        run: make docker-push
